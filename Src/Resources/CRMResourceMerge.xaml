<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mucc="clr-namespace:Microsoft.Uii.Csr;assembly=Microsoft.Uii.Csr.Core"
                    xmlns:control="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.Controls;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
                    xmlns:controlStyles="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.Controls.Styles;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
                    xmlns:resx="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Properties;assembly=UnifiedServiceDesk"
                    xmlns:usd="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                    xmlns:usdDesktop="clr-namespace:Microsoft.Crm.UnifiedServiceDesk;assembly=UnifiedServiceDesk"
                    xmlns:ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
                    xmlns:usdPanelLayouts="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.PanelLayouts;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:utilities="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.Utilities;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
                    xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
                    xmlns:usdstyle="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.Controls.Styles;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
                    xmlns:ProgressIndicator="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.RoundProgressIndicator;assembly=Microsoft.Crm.UnifiedServiceDesk.RoundProgressIndicator"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary ResourceDictionary.Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/ToolBar/Styles.xaml" />
        <ResourceDictionary ResourceDictionary.Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/Expander/Styles.xaml" />
        <ResourceDictionary ResourceDictionary.Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/ComboBox/Styles.xaml" />
        <ResourceDictionary ResourceDictionary.Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/Textblock/Styles.xaml" />
        <ResourceDictionary ResourceDictionary.Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/ScrollBar/Styles.xaml" />
        <ResourceDictionary ResourceDictionary.Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/Button/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="WindowBackgroundBrush" SolidColorBrush.Color="Transparent" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="WindowHeaderStyle" SolidColorBrush.Color="#F2F2F2" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="WindowBackgroundStyle" SolidColorBrush.Color="White" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarBackGroundBrush" SolidColorBrush.Color="#F8F8F8" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarButtonHoverBorder" SolidColorBrush.Color="#0A246A" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder" SolidColorBrush.Color="#0A246A" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarButtonPressed" SolidColorBrush.Color="#B1D6F0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarButtonHover" SolidColorBrush.Color="#D7EBF9" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarSplitButtonSelectedBrush" SolidColorBrush.Color="#B1D6F0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarGripper" SolidColorBrush.Color="White" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="NotificationBarColorBrush" SolidColorBrush.Color="#FFF19D" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarMenuBorder" SolidColorBrush.Color="#666666" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" SolidColorBrush.Color="#F9F8F7" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="GlyphBrush" SolidColorBrush.Color="#444" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" SolidColorBrush.Color="White" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" SolidColorBrush.Color="#9CB6C5" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="FocusBackgroundBrush" SolidColorBrush.Color="Blue" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="FocusForegroundBrush" SolidColorBrush.Color="White" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" SolidColorBrush.Color="#888" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="ButtonBorder" SolidColorBrush.Color="#FF003C74" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <SolidColorBrush x:Key="NormalBrush" SolidColorBrush.Color="White" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <LinearGradientBrush x:Key="NormalBorderBrush" LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <GradientStop GradientStop.Color="#CCC" GradientStop.Offset="0.0" />
        <GradientStop GradientStop.Color="#444" GradientStop.Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
        <GradientStop GradientStop.Color="#FFF0F0EA" GradientStop.Offset="0.9" />
    </LinearGradientBrush>
    <Style x:Key="ComboBoxFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle FrameworkElement.Margin="4,4,21,4" UIElement.SnapsToDevicePixels="True" Shape.Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Shape.StrokeThickness="1" Shape.StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSeparatorStyle" Style.TargetType="{x:Type Separator}" Style.BasedOn="{StaticResource {x:Type Separator}}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TransformGroup.Children>
                        <TransformCollection>
                            <RotateTransform RotateTransform.Angle="90" />
                        </TransformCollection>
                    </TransformGroup.Children>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="DownArrowGeometry" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        M 0 0 L 3.5 4 L 7 0 Z
    </Geometry>
    <Style x:Key="ComboBoxTransparentButtonStyle" Style.TargetType="{x:Type ToggleButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.Width" Setter.Value="Auto" />
        <Setter Setter.Property="FrameworkElement.Height" Setter.Value="Auto" />
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="2" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
                    <DockPanel Panel.Background="{TemplateBinding Control.Background}" DockPanel.LastChildFill="False" UIElement.SnapsToDevicePixels="True">
                        <Microsoft_Windows_Themes:ClassicBorderDecorator Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderStyle="AltRaised" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" p8:DockPanel.Dock="Right" p8:FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" xmlns:p8="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
                            <Path Path.Data="{StaticResource DownArrowGeometry}" Shape.Fill="{TemplateBinding Control.Foreground}" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" />
                        </Microsoft_Windows_Themes:ClassicBorderDecorator>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
                            <Setter TargetName="Border" Property="Microsoft_Windows_Themes:ClassicBorderDecorator.BorderStyle" Value="AltPressed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" Style.TargetType="{x:Type TextBox}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
        <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
        <Setter Setter.Property="ScrollViewer.PanningMode" Setter.Value="VerticalFirst" />
        <Setter Setter.Property="Stylus.IsFlicksEnabled" Setter.Value="False" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type TextBox}">
                    <ScrollViewer ScrollViewer.Name="PART_ContentHost" Control.Background="#00FFFFFF" UIElement.Focusable="True" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FloatingWindow" Style.TargetType="{x:Type Window}" Style.BasedOn="{StaticResource {x:Type Window}}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource WindowHeaderStyle}" />
    </Style>
    <Style x:Key="ToolWindow" Style.TargetType="{x:Type Window}" Style.BasedOn="{StaticResource {x:Type Window}}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource WindowHeaderStyle}" />
    </Style>
    <Style x:Key="LeftPanelGrid" Style.TargetType="{x:Type Grid}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.Width" Setter.Value="385" />
    </Style>
    <Style x:Key="MainWindow" Style.TargetType="{x:Type Window}" Style.BasedOn="{StaticResource {x:Type Window}}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource WindowHeaderStyle}" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
        <Setter Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
        <Setter Setter.Property="Window.WindowState" Setter.Value="Normal" />
        <Setter Setter.Property="Window.SizeToContent" Setter.Value="Manual" />
        <Setter Setter.Property="Window.Title" Setter.Value="{x:Static resx:Resources.AGENTDESKTOP_MAIN_TITLE}" />
        <Setter Setter.Property="Window.Icon" Setter.Value="/UnifiedServiceDesk;component/imageResources/dynamics16-32-48-256.ico" />
        <Setter Setter.Property="Control.FontFamily" Setter.Value="Segoe UI" />
    </Style>
    <Style x:Key="AgentScriptControlBorderStyle" Style.TargetType="{x:Type Border}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Border.BorderBrush" Setter.Value="#FFD8D8D8" />
        <Setter Setter.Property="Border.BorderThickness" Setter.Value="0,1,0,1" />
    </Style>
    <Style x:Key="AgentScriptTextLabel" Style.TargetType="{x:Type Label}" Style.BasedOn="{StaticResource BaseFontStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
        <Setter Setter.Property="Control.FontSize" Setter.Value="12" />
        <Setter Setter.Property="Control.FontWeight" Setter.Value="SemiBold" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,4,0,0" />
    </Style>
    <Style x:Key="AgentScriptHeaderLabel" Style.TargetType="{x:Type Label}" Style.BasedOn="{StaticResource BaseFontStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.FontSize" Setter.Value="12" />
        <Setter Setter.Property="Control.FontWeight" Setter.Value="Bold" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,4,0,2" />
    </Style>
    <Style x:Key="AgentScriptInstructionsLabel" Style.TargetType="{x:Type Label}" Style.BasedOn="{StaticResource AgentScriptTextLabel}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <Style x:Key="AgentScriptText" Style.TargetType="{x:Type TextBlock}" Style.BasedOn="{StaticResource BaseFontStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="TextBlock.TextWrapping" Setter.Value="WrapWithOverflow" />
        <Setter Setter.Property="TextBlock.FontSize" Setter.Value="12" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="5,5,0,5" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
    </Style>
    <Style x:Key="AgentScriptInstructions" Style.TargetType="{x:Type TextBlock}" Style.BasedOn="{StaticResource AgentScriptText}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="TextBlock.FontSize" Setter.Value="10" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
    </Style>
    <Style x:Key="AgentScriptAnswer" Style.TargetType="{x:Type control:AgentScriptAnswerButton}" Style.BasedOn="{StaticResource BaseFontStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FF0072C6" />
        <Setter Setter.Property="Control.Padding" Setter.Value="2" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="1, 0, 0, 0" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Left" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type control:AgentScriptAnswerButton}">
                    <Border Border.Name="Bd" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Background="{TemplateBinding Control.Background}" Border.Padding="{TemplateBinding Control.Padding}" UIElement.SnapsToDevicePixels="True">
                        <StackPanel StackPanel.Orientation="Horizontal">
                            <Image Image.Name="VisitedImage" Image.Source="/UnifiedServiceDesk;component/imageResources/SymbolCheck.png" FrameworkElement.Height="16" FrameworkElement.Width="16" UIElement.Visibility="Hidden" FrameworkElement.Margin="0, 0, 1, 0" />
                            <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="control:AgentScriptAnswerButton.HasVisited" Trigger.Value="True">
                            <Setter Setter.TargetName="VisitedImage" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHoverBorder}" Setter.Property="Border.BorderBrush" />
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHoverBorder}" Setter.Property="Border.BorderBrush" />
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                            <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonPressedBorder}" Setter.Property="Border.BorderBrush" />
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonPressed}" Setter.Property="Border.Background" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                            <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AgentScriptHistory" Style.TargetType="{x:Type ComboBox}" Style.BasedOn="{StaticResource {x:Type ComboBox}}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <Style x:Key="DebuggerToggleButton" Style.TargetType="{x:Type ToggleButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
                    <Border Border.Padding="{TemplateBinding Control.Padding}">
                        <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
                            <Grid.RowDefinitions>
                                <RowDefinition RowDefinition.Height="*" />
                            </Grid.RowDefinitions>
                            <Grid FrameworkElement.VerticalAlignment="Center">
                                <FrameworkElement.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform RotateTransform.Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </FrameworkElement.LayoutTransform>
                                <Ellipse Ellipse.Name="circle" Shape.Fill="{DynamicResource ExpanderArrowFill}" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Width="19" FrameworkElement.Height="19" />
                                <Path Path.Name="arrow" Shape.Stroke="#FFFFFFFF" Shape.StrokeThickness="2" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" UIElement.SnapsToDevicePixels="False" Path.Data="M0,4L8,4 4,8z" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
                            <Setter Setter.TargetName="arrow" Setter.Property="Path.Data" Setter.Value="M0,4L8,4 4,8z" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="circle" Setter.Property="Shape.Stroke" Setter.Value="#FF3C7FB1" />
                            <Setter Setter.TargetName="circle" Setter.Value="{DynamicResource ExpanderArrowHoverFill}" Setter.Property="Shape.Fill" />
                            <Setter Setter.TargetName="arrow" Setter.Property="Shape.Stroke" Setter.Value="#FFFFFFFF" />
                        </Trigger>
                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                            <Setter Setter.TargetName="circle" Setter.Property="Shape.Stroke" Setter.Value="#FF526C7B" />
                            <Setter Setter.TargetName="circle" Setter.Property="Shape.StrokeThickness" Setter.Value="1.5" />
                            <Setter Setter.TargetName="circle" Setter.Value="{DynamicResource ExpanderArrowPressedFill}" Setter.Property="Shape.Fill" />
                            <Setter Setter.TargetName="arrow" Setter.Property="Shape.Stroke" Setter.Value="#FFFFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EventsGridItemStyle" Style.TargetType="{x:Type ListViewItem}" Style.BasedOn="{StaticResource BaseFontStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#FFFFFFFF" />
        <Setter Setter.Property="Control.FontSize" Setter.Value="12" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FF444444" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="2" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="25" />
        <Setter Setter.Property="FrameworkElement.ToolTip" Setter.Value="{Binding exception}" />
        <Style.Triggers>
            <DataTrigger DataTrigger.Binding="{Binding ConditionResult}" DataTrigger.Value="ActionFailed">
                <Setter Setter.Property="Control.Background" Setter.Value="#FFFDC0C0" />
            </DataTrigger>
            <DataTrigger DataTrigger.Binding="{Binding ConditionResult}" DataTrigger.Value="ConditionFailed">
                <Setter Setter.Property="Control.Background" Setter.Value="#FFFFFF33" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Condition.Binding="{Binding Type}" Condition.Value="Route" />
                    <Condition Condition.Binding="{Binding ConditionResult}" Condition.Value="ConditionFailed" />
                </MultiDataTrigger.Conditions>
                <Setter Setter.Property="Control.Background" Setter.Value="#FFFDC0C0" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ItemContStyle" Style.TargetType="{x:Type ListViewItem}" Style.BasedOn="{StaticResource EventsGridItemStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
    <Style x:Key="EventsGridColumnHeaderStyle" Style.TargetType="{x:Type GridViewColumnHeader}" Style.BasedOn="{StaticResource BaseFontStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#FFFFFFFF" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="1,1,1,1" />
        <Setter Setter.Property="Control.FontSize" Setter.Value="12" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FF666666" />
        <Setter Setter.Property="FrameworkElement.Height" Setter.Value="25" />
    </Style>
    <Style x:Key="CloseButtonStyle" Style.TargetType="{x:Type Button}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
        <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
        <Setter Setter.Property="ContentControl.Content" Setter.Value="r" />
        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Center" />
        <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Right" />
        <Setter Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,5,0" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
        <Setter Setter.Property="Control.FontFamily" Setter.Value="Webdings" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type Button}">
                    <ContentPresenter ContentPresenter.RecognizesAccessKey="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SessionTabHeaderStyle" Style.TargetType="{x:Type TextBlock}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="TextBlock.FontFamily" Setter.Value="{Binding Path=FontFamily,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Label}}}" />
        <Setter Setter.Property="TextBlock.FontSize" Setter.Value="{Binding Path=FontSize,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Label}}}" />
        <Setter Setter.Property="TextBlock.Foreground" Setter.Value="{Binding Path=Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Label}}}" />
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="True" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
    </Style>
    <Style x:Key="USDSessionTab" Style.TargetType="{x:Type TabControl}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="True" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Continue">
                        <Border FrameworkElement.Name="BottomBorder" Border.BorderBrush="{StaticResource AirThemeColor}" Border.BorderThickness="0,0,0,3" FrameworkElement.Margin="0,0,0,0">
                            <TabPanel FrameworkElement.Name="HeaderPanel" Grid.Row="0" FrameworkElement.Margin="6,0,0,0" Panel.ZIndex="1" Panel.IsItemsHost="True" KeyboardNavigation.TabIndex="1" FrameworkElement.HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                            <Setter Setter.TargetName="BottomBorder" Setter.Property="Border.BorderThickness" Setter.Value="0" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                            <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="USDSessionTabItem" Style.TargetType="{x:Type TabItem}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="True" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type TabItem}">
                    <Border Name="Border" BorderBrush="#00FFFFFF" BorderThickness="0" CornerRadius="0" Margin="0" Background="#00FFFFFF">
                        <DockPanel>
                            <Label Label.Name="TabLabel" DockPanel.Dock="Left" Control.Foreground="#FFFFFFFF" Control.FontFamily="Segoe UI" Control.FontSize="14">
                                <ContentPresenter ContentPresenter.Name="ContentSite" FrameworkElement.VerticalAlignment="Top" FrameworkElement.HorizontalAlignment="Center" ContentPresenter.RecognizesAccessKey="True" ContentPresenter.ContentSource="Header" FrameworkElement.Margin="5,0,5,0" />
                            </Label>
                            <ProgressIndicator:ChatIndicator Name="ChatIndicator" Visibility="Collapsed" />
                            <ProgressIndicator:MainControl Name="ProgressIndicator" Visibility="Collapsed" />
                            <Button Name="PART_BTNCLOSE" DockPanel.Dock="Right" Style="{StaticResource CloseButtonStyle}" Command="usd:ActionCommands.CloseSessionTab" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="TabItem.IsSelected" Trigger.Value="True">
                            <Setter Setter.Property="Panel.ZIndex" Setter.Value="100" />
                            <Setter Setter.TargetName="Border" Setter.Value="{StaticResource AirThemeColor}" Setter.Property="Border.BorderBrush" />
                            <Setter Setter.TargetName="Border" Setter.Value="{StaticResource AirThemeColor}" Setter.Property="Border.Background" />
                            <Setter Setter.TargetName="Border" Setter.Property="FrameworkElement.Margin" Setter.Value="2,0,0,0" />
                            <Setter Setter.TargetName="PART_BTNCLOSE" Setter.Value="{Binding CloseButtonVisibility}" Setter.Property="UIElement.Visibility" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                            <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="TabItem.IsSelected" Trigger.Value="False">
                            <Setter Setter.TargetName="TabLabel" Setter.Property="Control.Foreground" Setter.Value="#FF666666" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="USDTabPanelStyle" Style.TargetType="{x:Type Grid}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="True" />
        <Setter Setter.Property="UIElement.ClipToBounds" Setter.Value="False" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
        <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    </Style>
    <Style x:Key="BaseUSDTab" Style.TargetType="{x:Type TabItem}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="True" />
        <Setter Setter.Property="UIElement.ClipToBounds" Setter.Value="False" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
        <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type TabItem}">
                    <Border Border.Name="Border" Border.BorderBrush="#00FFFFFF" Border.BorderThickness="0" Border.CornerRadius="0">
                        <Grid>
                            <TextBlock TextBlock.Name="ContentSite" FrameworkElement.Margin="20,5,20,5" FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Center" TextBlock.FontSize="12" TextBlock.FontFamily="Segoe UI" TextBlock.Foreground="#FF666666">
                <ContentPresenter ContentPresenter.ContentSource="Header" />
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="TabItem.IsSelected" Trigger.Value="True">
                            <Setter Setter.TargetName="Border" Setter.Property="Border.BorderBrush" Setter.Value="#FF9CB6C5" />
                            <Setter Setter.TargetName="Border" Setter.Property="Border.BorderThickness" Setter.Value="1,1,1,0" />
                            <Setter Setter.TargetName="Border" Setter.Property="Border.Background" Setter.Value="#FFF2F2F2" />
                            <Setter Setter.TargetName="ContentSite" Setter.Property="TextBlock.Foreground" Setter.Value="#FF262626" />
                            <Setter Setter.TargetName="ContentSite" Setter.Property="TextBlock.FontWeight" Setter.Value="Bold" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                            <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Bottom" />
                        <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Left" />
                        <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Right" />
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="Control.Padding" Setter.Value="11,2,14,2" />
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="Control.Padding" Setter.Value="14,2,11,2" />
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type controlStyles:USDTab}" Style.TargetType="{x:Type controlStyles:USDTab}" Style.BasedOn="{StaticResource BaseUSDTab}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type controlStyles:USDTab}">
                    <Border Border.Name="Border" Border.BorderBrush="#00FFFFFF" Border.BorderThickness="0,0,0,0" Border.CornerRadius="0,0,0,0">
                        <Grid>
                            <DockPanel>
                                <TextBlock TextBlock.Name="ContentSite" DockPanel.Dock="Left" FrameworkElement.Margin="20,5,20,5" FrameworkElement.VerticalAlignment="Center" TextBlock.FontSize="12" TextBlock.FontFamily="Segoe UI" TextBlock.Foreground="#FF666666">
                  <ContentPresenter ContentPresenter.ContentSource="Header" />
                                </TextBlock>
                                <Button Button.Name="CloseButton" DockPanel.Dock="Right" FrameworkElement.Style="{StaticResource CloseButtonStyle}" Control.Foreground="#FF000000" UIElement.Visibility="Collapsed" Command="usd:ActionCommands.CloseControl" />
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="TabItem.IsSelected" Trigger.Value="True">
                            <Setter Setter.TargetName="Border" Setter.Property="Border.BorderBrush" Setter.Value="#FF9CB6C5" />
                            <Setter Setter.TargetName="Border" Setter.Property="Border.BorderThickness" Setter.Value="1,1,1,0" />
                            <Setter Setter.TargetName="Border" Setter.Property="Border.Background" Setter.Value="#FFF2F2F2" />
                            <Setter Setter.TargetName="ContentSite" Setter.Property="TextBlock.Foreground" Setter.Value="#FF262626" />
                            <Setter Setter.TargetName="ContentSite" Setter.Property="TextBlock.FontWeight" Setter.Value="Bold" />
                        </Trigger>
                        <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Bottom" />
                        <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Left" />
                        <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Right" />
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="controlStyles:USDTab.CloseButtonAvailable" Condition.Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.TargetName="CloseButton" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="Control.Padding" Setter.Value="11,2,14,2" />
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TabItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TabItem.TabStripPlacement" Condition.Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Property="Control.Padding" Setter.Value="14,2,11,2" />
                            <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TabControl}" Style.TargetType="{x:Type TabControl}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-1,0,0,0" />
        <Setter Setter.Property="Control.Padding" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="10" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="10" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type TabControl}">
                    <Grid UIElement.ClipToBounds="True" UIElement.SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Continue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition0" />
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition1" ColumnDefinition.Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition RowDefinition.Name="RowDefinition0" RowDefinition.Height="Auto" />
                            <RowDefinition RowDefinition.Height="1" />
                            <RowDefinition RowDefinition.Name="RowDefinition1" RowDefinition.Height="*" />
                        </Grid.RowDefinitions>
                        <Border FrameworkElement.Name="BottomBorder" Grid.Row="1" Border.BorderBrush="{DynamicResource SelectedForegroundBrush}" Border.BorderThickness="0,1,0,0" FrameworkElement.Margin="0,0,0,0" />
                        <TabPanel TabPanel.Name="HeaderPanel" Panel.Background="#00FFFFFF" Grid.Column="0" Panel.IsItemsHost="True" FrameworkElement.Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Grid Grid.Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="2" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
                            <Border Border.BorderThickness="1,0,1,1" Border.BorderBrush="{DynamicResource SelectedForegroundBrush}" FrameworkElement.Margin="1,0,0,0" />
                            <ContentPresenter ContentPresenter.Name="PART_SelectedContentHost" ContentPresenter.ContentSource="SelectedContent" FrameworkElement.Margin="0" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Bottom">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="Auto" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Left">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Right">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,2,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type usdPanelLayouts:USDDeckTabPanel}" Style.TargetType="{x:Type usdPanelLayouts:USDDeckTabPanel}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
        <Setter Setter.Property="Control.Padding" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="10" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="10" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type usdPanelLayouts:USDDeckTabPanel}">
                    <Grid UIElement.ClipToBounds="True" UIElement.SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Continue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition0" />
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition1" ColumnDefinition.Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition RowDefinition.Name="RowDefinition0" RowDefinition.Height="Auto" />
                            <RowDefinition RowDefinition.Name="RowDefinition1" RowDefinition.Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel TabPanel.Name="HeaderPanel" Panel.Background="#00FFFFFF" Grid.Column="0" Panel.IsItemsHost="True" FrameworkElement.Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Grid Grid.Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
                            <ContentPresenter ContentPresenter.Name="PART_SelectedContentHost" ContentPresenter.ContentSource="SelectedContent" FrameworkElement.Margin="2,2,2,2" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Bottom">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="Auto" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Left">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Right">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                        <Trigger Trigger.Property="controlStyles:USDTabControl.HasOneItem" Trigger.Value="True">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type usdPanelLayouts:USDDeckPanel}" Style.TargetType="{x:Type usdPanelLayouts:USDDeckPanel}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
        <Setter Setter.Property="Control.Padding" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="10" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="10" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type usdPanelLayouts:USDDeckPanel}">
                    <Grid UIElement.ClipToBounds="True" UIElement.SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Continue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition0" />
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition1" ColumnDefinition.Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition RowDefinition.Name="RowDefinition0" RowDefinition.Height="Auto" />
                            <RowDefinition RowDefinition.Name="RowDefinition1" RowDefinition.Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
                            <ContentPresenter ContentPresenter.Name="PART_SelectedContentHost" ContentPresenter.ContentSource="SelectedContent" FrameworkElement.Margin="0" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type usdPanelLayouts:USDTabPanel}" Style.TargetType="{x:Type usdPanelLayouts:USDTabPanel}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
        <Setter Setter.Property="Control.Padding" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="10" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="10" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type usdPanelLayouts:USDTabPanel}">
                    <Grid UIElement.ClipToBounds="True" UIElement.SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Continue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition0" />
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition1" ColumnDefinition.Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition RowDefinition.Name="RowDefinition0" RowDefinition.Height="Auto" />
                            <RowDefinition RowDefinition.Name="RowDefinition1" RowDefinition.Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel TabPanel.Name="HeaderPanel" Panel.Background="#00FFFFFF" Panel.IsItemsHost="True" FrameworkElement.Margin="1,2,2,0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border Grid.Column="0" Grid.Row="1" Border.BorderBrush="#FF9CB6C5" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="0">
                            <Grid Grid.Name="ContentPanel" Panel.Background="#00FFFFFF" KeyboardNavigation.DirectionalNavigation="Continue" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
                                <ContentPresenter ContentPresenter.Name="PART_SelectedContentHost" ContentPresenter.ContentSource="SelectedContent" FrameworkElement.Margin="0" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Bottom">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="Auto" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Left">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Right">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,2,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type usdPanelLayouts:USDCollapsePanel}" Style.TargetType="{x:Type usdPanelLayouts:USDCollapsePanel}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0" />
        <Setter Setter.Property="Control.Padding" Setter.Value="0" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type usdPanelLayouts:USDCollapsePanel}">
                    <Grid UIElement.ClipToBounds="True" UIElement.SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Continue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition0" />
                            <ColumnDefinition ColumnDefinition.Name="ColumnDefinition1" ColumnDefinition.Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition RowDefinition.Name="RowDefinition0" RowDefinition.Height="Auto" />
                            <RowDefinition RowDefinition.Name="RowDefinition1" RowDefinition.Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel TabPanel.Name="HeaderPanel" Panel.Background="#00FFFFFF" Grid.Column="0" Panel.IsItemsHost="True" FrameworkElement.Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Grid Grid.Name="ContentPanel" Grid.Column="0" Panel.Background="#00FFFFFF" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
                            <ContentPresenter ContentPresenter.Name="PART_SelectedContentHost" ContentPresenter.ContentSource="SelectedContent" FrameworkElement.Margin="0" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Bottom">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="Auto" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Left">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Right">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="1" />
                            <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="0" />
                            <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
                            <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
                            <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Trigger.Property="controlStyles:USDTabControl.HasOneItem" Trigger.Value="True">
                            <Setter Setter.TargetName="HeaderPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
                            <Setter Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="USDDebuggerTab" Style.TargetType="{x:Type TabItem}" Style.BasedOn="{StaticResource BaseUSDTab}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    </Style>
    <Style x:Key="{x:Type usd:DynamicsBaseHostedControl}" Style.TargetType="{x:Type usd:DynamicsBaseHostedControl}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0,0,0,0" />
    </Style>
    <Style x:Key="ToolBarButtonStyle" Style.TargetType="{x:Type Button}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Setter.Property="Control.Padding" Setter.Value="2" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type Button}">
                    <Border Border.Name="Bd" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Background="{TemplateBinding Control.Background}" Border.Padding="{TemplateBinding Control.Padding}" UIElement.SnapsToDevicePixels="True">
                        <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHoverBorder}" Setter.Property="Border.BorderBrush" />
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHoverBorder}" Setter.Property="Border.BorderBrush" />
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonPressedBorder}" Setter.Property="Border.BorderBrush" />
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonPressed}" Setter.Property="Border.Background" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                            <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" Style.TargetType="{x:Type ToggleButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="{StaticResource NormalBrush}" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
                    <Border Border.Name="Bd" Border.Background="#00FFFFFF" Border.CornerRadius="0" UIElement.SnapsToDevicePixels="True">
                        <Image Image.Source="/UnifiedServiceDesk;component/imageResources/More_16.png" FrameworkElement.Margin="2,4,2,0" FrameworkElement.Width="16" FrameworkElement.Height="16" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.HorizontalAlignment="Right" AutomationProperties.Name="More Menu" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{StaticResource ToolBarGripper}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" DataTrigger.Value="true">
                <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" Style.TargetType="{x:Type ToggleButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
                    <Border Border.Name="Bd" Border.Background="#00FFFFFF" Border.CornerRadius="0" UIElement.SnapsToDevicePixels="True">
                        <Image Image.Source="/UnifiedServiceDesk;component/imageResources/More_16.png" FrameworkElement.Margin="2,4,2,0" FrameworkElement.Width="16" FrameworkElement.Height="16" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.HorizontalAlignment="Right" AutomationProperties.Name="More Menu" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{StaticResource ToolBarGripper}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" DataTrigger.Value="true">
                <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToolBarThumbStyle" Style.TargetType="{x:Type Thumb}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
                    <Border Border.Background="#00FFFFFF" Border.Padding="{TemplateBinding Control.Padding}" UIElement.SnapsToDevicePixels="True">
                        <Rectangle>
                            <Shape.Fill>
                                <DrawingBrush TileBrush.TileMode="Tile" TileBrush.Viewbox="0,0,4,4" TileBrush.Viewport="0,0,4,4" TileBrush.ViewportUnits="Absolute" TileBrush.ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing GeometryDrawing.Brush="#FFFFFFFF" GeometryDrawing.Geometry="M1,1L1,3 3,3 3,1z" />
                                            <GeometryDrawing GeometryDrawing.Brush="{StaticResource ToolBarGripper}" GeometryDrawing.Geometry="M0,0L0,2 2,2 2,0z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Shape.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarMainPanelBorderStyle" Style.TargetType="{x:Type Border}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,11,0" />
        <Setter Setter.Property="Border.CornerRadius" Setter.Value="3,3,3,3" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Style.Triggers>
            <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" DataTrigger.Value="true">
                <Setter Setter.Property="Border.CornerRadius" Setter.Value="0,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ToolBar}" Style.TargetType="{x:Type ToolBar}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type ToolBar}">
                    <Grid Grid.Name="Grid" FrameworkElement.Margin="3,1,1,1" UIElement.SnapsToDevicePixels="True">
                        <Grid Grid.Name="OverflowGrid" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="0,0,-11,0">
                            <ToggleButton ToggleButton.Name="OverflowButton" ButtonBase.ClickMode="Press" UIElement.IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" FrameworkElement.Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" UIElement.Visibility="Collapsed" FrameworkElement.Margin="0,0,0,5" FrameworkElement.FocusVisualStyle="{x:Null}" ToggleButton.IsChecked="{Binding IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                            <Popup Popup.Name="OverflowPopup" Popup.AllowsTransparency="True" UIElement.Focusable="True" Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Popup.Placement="Bottom" Popup.StaysOpen="False" Popup.IsOpen="{Binding IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}">
                                <themes:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                                    <Border Border.Name="ToolBarSubMenuBorder" Border.BorderBrush="{StaticResource ToolBarMenuBorder}" Border.BorderThickness="1" Border.Background="{StaticResource ToolBarSubMenuBackground}" RenderOptions.ClearTypeHint="Enabled">
                                        <ToolBarOverflowPanel ToolBarOverflowPanel.Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Continue" UIElement.Focusable="True" FrameworkElement.Margin="2" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Continue" ToolBarOverflowPanel.WrapWidth="200" FrameworkElement.FocusVisualStyle="{x:Null}" />
                                    </Border>
                                </themes:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <Border Border.Name="MainPanelBorder" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Background="{TemplateBinding Control.Background}" Border.Padding="{TemplateBinding Control.Padding}" FrameworkElement.Style="{StaticResource ToolBarMainPanelBorderStyle}">
                            <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Continue">
                                <Thumb Thumb.Name="ToolBarThumb" FrameworkElement.Margin="-3,-1,0,0" Control.Padding="6,5,1,6" FrameworkElement.Style="{StaticResource ToolBarThumbStyle}" />
                                <ContentPresenter ContentPresenter.Name="ToolBarHeader" ContentPresenter.ContentSource="Header" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="4,0,4,0" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.VerticalAlignment="Center" />
                                <ToolBarPanel ToolBarPanel.Name="PART_ToolBarPanel" Panel.IsItemsHost="True" FrameworkElement.Margin="0" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="ToolBar.HasOverflowItems" Trigger.Value="True">
                            <Setter Setter.TargetName="OverflowButton" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                        </Trigger>
                        <Trigger Trigger.Property="ToolBar.IsOverflowOpen" Trigger.Value="True">
                            <Setter Setter.TargetName="ToolBarThumb" Setter.Property="UIElement.IsEnabled" Setter.Value="False" />
                        </Trigger>
                        <Trigger Trigger.Value="{x:Null}" Trigger.Property="HeaderedItemsControl.Header">
                            <Setter Setter.TargetName="ToolBarHeader" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.Property="ToolBarTray.IsLocked" Trigger.Value="True">
                            <Setter Setter.TargetName="ToolBarThumb" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.SourceName="OverflowPopup" Trigger.Property="Popup.HasDropShadow" Trigger.Value="True">
                            <Setter Setter.TargetName="Shdw" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,5,5" />
                            <Setter Setter.TargetName="Shdw" Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
                            <Setter Setter.TargetName="Shdw" Setter.Property="themes:SystemDropShadowChrome.Color" Setter.Value="#71000000" />
                        </Trigger>
                        <Trigger Trigger.Property="ToolBar.Orientation" Trigger.Value="Vertical">
                            <Setter Setter.TargetName="Grid" Setter.Property="FrameworkElement.Margin" Setter.Value="1,3,1,1" />
                            <Setter Setter.TargetName="OverflowButton" Setter.Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" Setter.Property="FrameworkElement.Style" />
                            <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Height" Setter.Value="10" />
                            <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Width" Setter.Value="Auto" />
                            <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Margin" Setter.Value="-1,-3,0,0" />
                            <Setter Setter.TargetName="ToolBarThumb" Setter.Property="Control.Padding" Setter.Value="5,6,6,1" />
                            <Setter Setter.TargetName="ToolBarHeader" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,4" />
                            <Setter Setter.TargetName="PART_ToolBarPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="1,0,2,2" />
                            <Setter Setter.TargetName="ToolBarThumb" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
                            <Setter Setter.TargetName="ToolBarHeader" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
                            <Setter Setter.TargetName="OverflowGrid" Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
                            <Setter Setter.TargetName="OverflowGrid" Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Bottom" />
                            <Setter Setter.TargetName="OverflowPopup" Setter.Property="Popup.Placement" Setter.Value="Right" />
                            <Setter Setter.TargetName="MainPanelBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,11" />
                            <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
                            <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
                            <Setter Setter.Property="KeyboardNavigation.DirectionalNavigation" Setter.Value="Continue" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger DataTrigger.Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" DataTrigger.Value="true">
                <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type control:ToolbarMenuItem}" Style.TargetType="{x:Type control:ToolbarMenuItem}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FF262626" />
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    </Style>
    <Style x:Key="{x:Type control:ToolbarContextMenu}" Style.TargetType="{x:Type control:ToolbarContextMenu}" Style.BasedOn="{StaticResource {x:Type ContextMenu}}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FF262626" />
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
        <Setter Setter.Property="Control.FontSize" Setter.Value="12" />
    </Style>
    <Style x:Key="ButtonFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="3" Shape.Stroke="#FF000000" Shape.StrokeDashArray="1 2" Shape.StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LabelStyle" Style.TargetType="{x:Type Label}" Style.BasedOn="{x:Null}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Stretch" ContentPresenter.RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolbarButtonTemplate" Style.TargetType="{x:Type control:ToolbarButton}" Style.BasedOn="{StaticResource ToolBarButtonBaseStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type control:ToolbarButton}">
                    <Border Border.Name="Bd" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Background="{TemplateBinding Control.Background}" Border.Padding="{TemplateBinding Control.Padding}" UIElement.SnapsToDevicePixels="True">
                        <StackPanel StackPanel.Orientation="Horizontal" FrameworkElement.Margin="5,2,10,4">
                            <Image Image.Name="Icon" FrameworkElement.Margin="0,0,2,0" FrameworkElement.VerticalAlignment="Center" FrameworkElement.MaxWidth="16" FrameworkElement.MaxHeight="16" Image.Source="{TemplateBinding control:ToolbarButton.Image}" />
                            <ContentPresenter FrameworkElement.Margin="{TemplateBinding FrameworkElement.Margin}" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Value="{x:Null}" Trigger.Property="control:ToolbarButton.Image">
                            <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Border.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ToolBarButtonPressed}" Setter.Property="Border.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="DropDownMenuIconStyle" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Image Image.Source="{Binding XPath=.}" />
    </DataTemplate>
    <ControlTemplate x:Key="DropDownMenuItemTemplate" ControlTemplate.TargetType="{x:Type MenuItem}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Border FrameworkElement.Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="Icon" />
                    <ColumnDefinition ColumnDefinition.Width="*" />
                    <ColumnDefinition ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="Shortcut" />
                    <ColumnDefinition ColumnDefinition.Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter ContentPresenter.Name="Icon" ContentPresenter.ContentTemplate="{StaticResource DropDownMenuIconStyle}" FrameworkElement.Margin="6,0,6,0" FrameworkElement.VerticalAlignment="Center" ContentPresenter.ContentSource="Icon" Grid.Column="0" FrameworkElement.Height="16" FrameworkElement.Width="16" />
                <Border Border.Name="Check" FrameworkElement.Width="13" FrameworkElement.Height="13" UIElement.Visibility="Collapsed" FrameworkElement.Margin="6,0,6,0" Border.Background="{StaticResource NormalBrush}" Border.BorderThickness="1" Border.BorderBrush="{StaticResource NormalBorderBrush}">
                    <Path Path.Name="CheckMark" FrameworkElement.Width="7" FrameworkElement.Height="7" UIElement.Visibility="Hidden" UIElement.SnapsToDevicePixels="False" Shape.Stroke="{StaticResource GlyphBrush}" Shape.StrokeThickness="2" Path.Data="M0,0L7,7 M0,7L7,0" />
                </Border>
                <ContentPresenter ContentPresenter.Name="HeaderHost" Grid.Column="1" ContentPresenter.ContentSource="Header" ContentPresenter.RecognizesAccessKey="True" FrameworkElement.Margin="5,2,0,2" FrameworkElement.VerticalAlignment="Center" />
                <TextBlock TextBlock.Name="InputGestureText" Grid.Column="2" TextBlock.Text="{TemplateBinding MenuItem.InputGestureText}" FrameworkElement.Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Trigger.Value="{x:Null}" Trigger.Property="MenuItem.Icon">
                <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsChecked" Trigger.Value="True">
                <Setter Setter.TargetName="CheckMark" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsCheckable" Trigger.Value="True">
                <Setter Setter.TargetName="Check" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsHighlighted" Trigger.Value="True">
                <Setter Setter.TargetName="Border" Setter.Value="{StaticResource SelectedBackgroundBrush}" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                <Setter Setter.Value="{StaticResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ToolBarDropDownButtonStyle" Style.TargetType="{x:Type control:DropDownButton}" Style.BasedOn="{StaticResource ToolBarButtonBaseStyle}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type control:DropDownButton}">
                    <Border UIElement.SnapsToDevicePixels="True" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <StackPanel StackPanel.Orientation="Horizontal" FrameworkElement.Margin="8,2,8,4">
                            <Image Image.Name="Icon" FrameworkElement.Margin="2,2,2,2" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Width="16" FrameworkElement.Height="16" Image.Source="{TemplateBinding control:DropDownButton.Image}" />
                            <ContentPresenter FrameworkElement.Margin="{TemplateBinding FrameworkElement.Margin}" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Path FrameworkElement.Style="{StaticResource DownArrowGeometryStyle}" FrameworkElement.Margin="4,4,0,0" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Value="{x:Null}" Trigger.Property="control:DropDownButton.Image">
                            <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Control.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Control.Background" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                                <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="UIElement.IsKeyboardFocused" Condition.Value="True" />
                                <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </MultiTrigger>
                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainButtonStyle" Style.TargetType="{x:Type Button}" Style.BasedOn="{x:Null}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="-2,-2,0,-2" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Rectangle.Name="rect" Shape.Fill="#00FFFFFF" Shape.Stroke="#00000000" />
                        <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" ContentPresenter.RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True" />
                        <Trigger Trigger.Property="Button.IsDefaulted" Trigger.Value="True" />
                        <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="rect" Setter.Property="Shape.Fill" Setter.Value="#00FFFFFF" />
                        </Trigger>
                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                            <Setter Setter.TargetName="rect" Setter.Property="Shape.Fill" Setter.Value="#FFE3E3DC" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle" Style.TargetType="{x:Type Button}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type Button}">
                    <Border Border.Name="Bd" UIElement.SnapsToDevicePixels="True" Border.Background="{TemplateBinding Control.Background}">
                        <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarSplitButtonStyle" Style.TargetType="{x:Type control:SplitButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.FontSize" Setter.Value="16" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Stretch" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type control:SplitButton}">
                    <Border FrameworkElement.Margin="4,0,4,0" UIElement.SnapsToDevicePixels="True" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <StackPanel StackPanel.Orientation="Horizontal">
                            <Button Button.Name="PART_Button" FrameworkElement.Style="{DynamicResource ButtonStyle}">
                                <StackPanel StackPanel.Orientation="Horizontal">
                                    <Image FrameworkElement.Margin="2,2,2,2" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Width="16" FrameworkElement.Height="16" Image.Source="{TemplateBinding control:SplitButton.Image}" />
                                    <ContentPresenter FrameworkElement.Margin="{TemplateBinding FrameworkElement.Margin}" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                </StackPanel>
                            </Button>
                            <Separator FrameworkElement.Style="{DynamicResource VerticalSeparatorStyle}" FrameworkElement.Height="Auto" />
                            <Border Border.Name="SplitDropDown">
                                <Path Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,0L4,4 8,0z" FrameworkElement.Height="5" FrameworkElement.Margin="2,2,4,0" />
                            </Border>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.SourceName="PART_Button" Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.TargetName="SplitDropDown" Setter.Property="Border.Background" Setter.Value="#00FFFFFF" />
                            <Setter Setter.Value="{StaticResource ToolBarButtonHover}" Setter.TargetName="PART_Button" Setter.Property="Control.Background" />
                        </Trigger>
                        <Trigger Trigger.SourceName="SplitDropDown" Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarButtonHover}" Setter.TargetName="SplitDropDown" Setter.Property="Border.Background" />
                            <Setter Setter.TargetName="PART_Button" Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
                        </Trigger>
                        <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarButtonHover}" Setter.Property="Control.Background" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                                <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="UIElement.IsKeyboardFocused" Condition.Value="True" />
                                <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </MultiTrigger>
                        <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                            <Setter Setter.Value="{StaticResource ToolBarSplitButtonSelectedBrush}" Setter.Property="Control.Background" />
                        </Trigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="SplitMenuIconStyle" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Image Image.Source="{Binding XPath=.}" />
    </DataTemplate>
    <ControlTemplate x:Key="SplitMenuItemTemplate" ControlTemplate.TargetType="{x:Type MenuItem}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Border FrameworkElement.Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="Icon" />
                    <ColumnDefinition ColumnDefinition.Width="*" />
                    <ColumnDefinition ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="Shortcut" />
                    <ColumnDefinition ColumnDefinition.Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter ContentPresenter.Name="Icon" ContentPresenter.ContentTemplate="{StaticResource SplitMenuIconStyle}" FrameworkElement.Margin="6,0,6,0" FrameworkElement.VerticalAlignment="Center" ContentPresenter.ContentSource="Icon" FrameworkElement.Height="16" FrameworkElement.Width="16" />
                <Border Border.Name="Check" FrameworkElement.Width="13" FrameworkElement.Height="13" UIElement.Visibility="Collapsed" FrameworkElement.Margin="6,0,6,0" Border.Background="{StaticResource NormalBrush}" Border.BorderThickness="1" Border.BorderBrush="{StaticResource NormalBorderBrush}">
                    <Path Path.Name="CheckMark" FrameworkElement.Width="7" FrameworkElement.Height="7" UIElement.Visibility="Hidden" UIElement.SnapsToDevicePixels="False" Shape.Stroke="{StaticResource GlyphBrush}" Shape.StrokeThickness="2" Path.Data="M0,0L7,7 M0,7L7,0" />
                </Border>
                <ContentPresenter ContentPresenter.Name="HeaderHost" Grid.Column="1" ContentPresenter.ContentSource="Header" ContentPresenter.RecognizesAccessKey="True" FrameworkElement.Margin="5,2,0,2" FrameworkElement.VerticalAlignment="Center" />
                <TextBlock TextBlock.Name="InputGestureText" Grid.Column="2" TextBlock.Text="{TemplateBinding MenuItem.InputGestureText}" FrameworkElement.Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Trigger.Value="{x:Null}" Trigger.Property="MenuItem.Icon">
                <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsChecked" Trigger.Value="True">
                <Setter Setter.TargetName="CheckMark" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsCheckable" Trigger.Value="True">
                <Setter Setter.TargetName="Check" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsHighlighted" Trigger.Value="True">
                <Setter Setter.TargetName="Border" Setter.Value="{StaticResource SelectedBackgroundBrush}" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                <Setter Setter.Value="{StaticResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ExpandCollapseToggleStyle" Style.TargetType="{x:Type ToggleButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="True" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
                    <Grid FrameworkElement.Width="15" FrameworkElement.Height="13" Panel.Background="#00FFFFFF">
                        <Path Path.Name="ExpandPath" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Margin="1,1,1,1" Shape.Fill="{StaticResource GlyphBrush}" Path.Data="M4,0L8,4 4,8z" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
                            <Setter Setter.TargetName="ExpandPath" Setter.Property="Path.Data" Setter.Value="M0,4L8,4 4,8z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type usd:TreeBarView}" Style.TargetType="{x:Type usd:TreeBarView}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="2" />
        <Setter Setter.Property="Control.Padding" Setter.Value="1" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility" Setter.Value="Auto" />
        <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility" Setter.Value="Auto" />
        <Setter Setter.Property="ScrollViewer.PanningMode" Setter.Value="Both" />
        <Setter Setter.Property="Stylus.IsFlicksEnabled" Setter.Value="False" />
        <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type usd:TreeBarView}">
                    <Microsoft_Windows_Themes:ClassicBorderDecorator BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderStyle="Sunken" Background="{TemplateBinding Control.Background}" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
                        <ScrollViewer ScrollViewer.Name="_tv_scrollviewer_" Control.Background="{TemplateBinding Control.Background}" ScrollViewer.CanContentScroll="False" UIElement.Focusable="True" ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Control.Padding="{TemplateBinding Control.Padding}" ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Microsoft_Windows_Themes:ClassicBorderDecorator>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type usd:TreeBarItem}" Style.TargetType="{x:Type usd:TreeBarItem}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="TreeViewItem.IsExpanded" Setter.Value="True" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type usd:TreeBarItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition ColumnDefinition.MinWidth="19" ColumnDefinition.Width="Auto" />
                            <ColumnDefinition ColumnDefinition.Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition RowDefinition.Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton ToggleButton.Name="Expander" FrameworkElement.Style="{StaticResource ExpandCollapseToggleStyle}" ButtonBase.ClickMode="Press" ToggleButton.IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border FrameworkElement.Name="Bd" Grid.Column="1" FrameworkElement.Height="20" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Padding="{TemplateBinding Control.Padding}" Border.CornerRadius="3">
                            <StackPanel StackPanel.Orientation="Horizontal">
                                <Image Image.Name="Icon" FrameworkElement.Margin="2,2,2,2" FrameworkElement.Width="16" FrameworkElement.Height="16" Image.Source="{TemplateBinding usd:TreeBarItem.Image}" />
                                <Label ContentControl.Content="{TemplateBinding usd:TreeBarItem.Text}" FrameworkElement.VerticalAlignment="Center" Control.Foreground="{TemplateBinding Control.Foreground}" Control.Padding="0" />
                                <ContentPresenter ContentPresenter.Name="PART_Header" ContentPresenter.ContentSource="Header" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" UIElement.Visibility="Collapsed" />
                            </StackPanel>
                        </Border>
                        <ItemsPresenter ItemsPresenter.Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Value="{x:Null}" Trigger.Property="usd:TreeBarItem.Image">
                            <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.Property="TreeViewItem.IsExpanded" Trigger.Value="False">
                            <Setter Setter.TargetName="ItemsHost" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                        </Trigger>
                        <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
                            <Setter Setter.TargetName="Expander" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="HeaderedItemsControl.HasHeader" Condition.Value="False" />
                                <Condition Condition.Property="FrameworkElement.Width" Condition.Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.TargetName="PART_Header" Setter.Property="FrameworkElement.MinWidth" Setter.Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="HeaderedItemsControl.HasHeader" Condition.Value="False" />
                                <Condition Condition.Property="FrameworkElement.Height" Condition.Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.TargetName="PART_Header" Setter.Property="FrameworkElement.MinHeight" Setter.Value="19" />
                        </MultiTrigger>
                        <Trigger Trigger.Property="TreeViewItem.IsSelected" Trigger.Value="True">
                            <Setter Setter.TargetName="Bd" Setter.Value="{DynamicResource FocusBackgroundBrush}" Setter.Property="Border.Background" />
                            <Setter Setter.Value="{DynamicResource FocusForegroundBrush}" Setter.Property="Control.Foreground" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="TreeViewItem.IsSelected" Condition.Value="True" />
                                <Condition Condition.Property="TreeViewItem.IsSelectionActive" Condition.Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.TargetName="Bd" Setter.Value="{DynamicResource FocusBackgroundBrush}" Setter.Property="Border.Background" />
                            <Setter Setter.Value="{DynamicResource FocusForegroundBrush}" Setter.Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
                            <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="USDRibbonWindow" Style.TargetType="{x:Type usdDesktop:RibbonDesktop}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource WindowHeaderStyle}" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="1024" />
        <Setter Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
        <Setter Setter.Property="Window.WindowState" Setter.Value="Normal" />
        <Setter Setter.Property="Window.SizeToContent" Setter.Value="Manual" />
        <Setter Setter.Property="Window.Title" Setter.Value="Unified Service Desk" />
        <Setter Setter.Property="Window.Icon" Setter.Value="/UnifiedServiceDesk;component/imageResources/DynamicsIcon.png" />
        <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="{x:Null}" />
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type ribbon:RibbonWindow}">
                    <FrameworkTemplate.Resources>
                        <ResourceDictionary>
                            <Style Style.TargetType="{x:Type Button}" x:Key="į">
                                <Setter Setter.Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate ControlTemplate.TargetType="{x:Type Button}">
                                            <Grid Panel.Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                                                <Border Border.Name="OuterTopLeftBorder" Border.BorderThickness="1,1,0,0" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                                <Border Border.Name="OuterBottomRightBorder" Border.BorderThickness="0,0,1,1" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                                <Border Border.Name="InnerTopLeftBorder" Border.BorderThickness="1,1,0,0" FrameworkElement.Margin="1" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                                                <Border Border.Name="InnerBottomRightBorder" Border.BorderThickness="0,0,1,1" FrameworkElement.Margin="1" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                <ContentPresenter FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
                                                    <Setter Setter.TargetName="OuterTopLeftBorder" Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Setter.Property="Border.BorderBrush" />
                                                    <Setter Setter.TargetName="OuterBottomRightBorder" Setter.Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Setter.Property="Border.BorderBrush" />
                                                    <Setter Setter.TargetName="InnerTopLeftBorder" Setter.Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Setter.Property="Border.BorderBrush" />
                                                    <Setter Setter.TargetName="InnerBottomRightBorder" Setter.Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Setter.Property="Border.BorderBrush" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                    </FrameworkTemplate.Resources>
                    <Grid>
                        <Border FrameworkElement.Name="NonClientAreaBorder" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Border.BorderThickness="{Binding Path=WindowNonClientFrameThickness,Source={x:Static shell:SystemParameters2.Current}}">
                            <Border FrameworkElement.Name="PART_ClientAreaBorder" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" />
                        </Border>
                        <Border Border.BorderThickness="1,1,0,0" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                        <Border Border.BorderThickness="0,0,1,1" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                        <Border FrameworkElement.Name="WindowHighlightBorder" Border.BorderThickness="1,1,0,0" FrameworkElement.Margin="1" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                        <Border FrameworkElement.Name="WindowShadowBorder" Border.BorderThickness="0,0,1,1" FrameworkElement.Margin="1" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        <Border FrameworkElement.Name="MiddleBorder" Border.BorderThickness="1" FrameworkElement.Margin="2" Border.BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                        <Grid FrameworkElement.Name="ButtonPanel" FrameworkElement.VerticalAlignment="Top" FrameworkElement.Margin="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness,RelativeSource={RelativeSource TemplatedParent}}" FrameworkElement.Height="{Binding Path=(shell:WindowChrome.WindowChrome).CaptionHeight,RelativeSource={RelativeSource TemplatedParent}}" Panel.Background="{DynamicResource {ComponentResourceKey ResourceId=ActiveCaptionGradient,TypeInTargetAssembly={x:Type ribbon:Ribbon}}}">
                            <Image FrameworkElement.Name="PART_Icon" shell:WindowChrome.IsHitTestVisibleInChrome="True" FrameworkElement.Margin="3,0,0,0" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" Image.Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Icon}" FrameworkElement.Width="{Binding Path=SmallIconSize.Width,Source={x:Static shell:SystemParameters2.Current}}" FrameworkElement.Height="{Binding Path=SmallIconSize.Height,Source={x:Static shell:SystemParameters2.Current}}" xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell" />
                            <Grid FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Width="{Binding Path=WindowCaptionButtonsLocation.Width,Source={x:Static shell:SystemParameters2.Current}}" FrameworkElement.Height="{Binding Path=WindowCaptionButtonsLocation.Height,Source={x:Static shell:SystemParameters2.Current}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition ColumnDefinition.Width="2" />
                                    <ColumnDefinition ColumnDefinition.Width="*" />
                                    <ColumnDefinition ColumnDefinition.Width="*" />
                                    <ColumnDefinition ColumnDefinition.Width="2" />
                                    <ColumnDefinition ColumnDefinition.Width="*" />
                                    <ColumnDefinition ColumnDefinition.Width="2" />
                                </Grid.ColumnDefinitions>
                                <Button FrameworkElement.Name="PART_MinimizeWindowButton" Grid.Column="1" FrameworkElement.Margin="0,2" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="shell:SystemCommands.MinimizeWindowCommand" UIElement.Focusable="True" FrameworkElement.Style="{StaticResource į}" xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell">
                                    <Path Path.Name="MinimizeWindowButtonGlyph" Shape.Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Shape.StrokeThickness="2">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure PathFigure.StartPoint="0,6">
                                                    <LineSegment LineSegment.Point="6,6" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                <Button FrameworkElement.Name="PART_RestoreWindowButton" Grid.Column="2" FrameworkElement.Margin="0,2" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="shell:SystemCommands.RestoreWindowCommand" UIElement.Focusable="True" FrameworkElement.Style="{StaticResource į}" UIElement.Visibility="Collapsed" xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell">
                                    <Path Path.Name="RestoreWindowButtonGlyph" Shape.Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Shape.StrokeThickness="1">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure PathFigure.StartPoint="0,3" PathFigure.IsClosed="False">
                                                    <LineSegment LineSegment.Point="0,8" />
                                                    <LineSegment LineSegment.Point="5,8" />
                                                    <LineSegment LineSegment.Point="5,3" />
                                                    <LineSegment LineSegment.Point="0,3" />
                                                    <LineSegment LineSegment.Point="0,4" />
                                                    <LineSegment LineSegment.Point="5,4" />
                                                    <LineSegment LineSegment.Point="5,5" />
                                                    <LineSegment LineSegment.Point="7,5" />
                                                    <LineSegment LineSegment.Point="7,0" />
                                                    <LineSegment LineSegment.Point="2,0" />
                                                    <LineSegment LineSegment.Point="2,1" />
                                                    <LineSegment LineSegment.Point="7,1" />
                                                </PathFigure>
                                                <PathFigure PathFigure.StartPoint="2,1" PathFigure.IsClosed="False">
                                                    <LineSegment LineSegment.Point="2,3" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                <Button FrameworkElement.Name="PART_MaximizeWindowButton" Grid.Column="2" FrameworkElement.Margin="0,2" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="shell:SystemCommands.MaximizeWindowCommand" UIElement.Focusable="True" FrameworkElement.Style="{StaticResource į}" xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell">
                                    <Path Path.Name="MaximizeWindowButtonGlyph" Shape.Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Shape.StrokeThickness="1">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure PathFigure.StartPoint="0,0" PathFigure.IsClosed="False">
                                                    <LineSegment LineSegment.Point="0,8" />
                                                    <LineSegment LineSegment.Point="8,8" />
                                                    <LineSegment LineSegment.Point="8,0" />
                                                    <LineSegment LineSegment.Point="0,0" />
                                                </PathFigure>
                                                <PathFigure PathFigure.StartPoint="0.5,1">
                                                    <LineSegment LineSegment.Point="7.5,1" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                <Button FrameworkElement.Name="PART_CloseWindowButton" Grid.Column="4" FrameworkElement.Margin="0,2" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="shell:SystemCommands.CloseWindowCommand" UIElement.Focusable="True" FrameworkElement.Style="{StaticResource į}" xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell">
                                    <Path Path.Name="CloseWindowButtonGlyph" Shape.Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Shape.StrokeThickness="1.5">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure PathFigure.StartPoint="0,0">
                                                    <LineSegment LineSegment.Point="8,7" />
                                                </PathFigure>
                                                <PathFigure PathFigure.StartPoint="8,0">
                                                    <LineSegment LineSegment.Point="0,7" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Button>
                            </Grid>
                        </Grid>
                        <Border Border.BorderThickness="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness,RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid>
                                <AdornerDecorator>
                                    <ContentPresenter FrameworkElement.Name="PART_RootContentPresenter" />
                                </AdornerDecorator>
                                <ResizeGrip ResizeGrip.Name="WindowResizeGrip" shell:WindowChrome.ResizeGripDirection="BottomRight" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Bottom" UIElement.Visibility="Collapsed" Control.IsTabStop="False" xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Trigger.Property="Window.IsActive" Trigger.Value="False">
                            <Setter Setter.TargetName="ButtonPanel" Setter.Value="{DynamicResource {ComponentResourceKey ResourceId=InactiveCaptionGradient,TypeInTargetAssembly={x:Type ribbon:Ribbon}}}" Setter.Property="Panel.Background" />
                            <Setter Setter.TargetName="MiddleBorder" Setter.Value="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}" Setter.Property="Border.BorderBrush" />
                        </Trigger>
                        <Trigger Trigger.Property="Window.WindowState" Trigger.Value="Maximized">
                            <Setter Setter.TargetName="PART_MaximizeWindowButton" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
                            <Setter Setter.TargetName="PART_RestoreWindowButton" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                        </Trigger>
                        <DataTrigger DataTrigger.Value="True" DataTrigger.Binding="{Binding Path=HighContrast,Source={x:Static shell:SystemParameters2.Current}}">
                            <Setter Setter.TargetName="PART_MinimizeWindowButton" Setter.Property="FrameworkElement.Width" Setter.Value="18" />
                            <Setter Setter.TargetName="PART_MaximizeWindowButton" Setter.Property="FrameworkElement.Width" Setter.Value="18" />
                            <Setter Setter.TargetName="PART_RestoreWindowButton" Setter.Property="FrameworkElement.Width" Setter.Value="18" />
                            <Setter Setter.TargetName="PART_CloseWindowButton" Setter.Property="FrameworkElement.Width" Setter.Value="18" />
                        </DataTrigger>
                        <Trigger Trigger.Value="{x:Null}" Trigger.Property="Window.Icon">
                            <Setter Setter.TargetName="PART_Icon" Setter.Property="Image.Source" Setter.Value="/UnifiedServiceDesk;component/imageResources/DynamicsIcon.png" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Condition.Property="Window.ResizeMode" Condition.Value="CanResizeWithGrip" />
                                <Condition Condition.Property="Window.WindowState" Condition.Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Setter.TargetName="WindowResizeGrip" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style Style.TargetType="{x:Type controlStyles:ControlHeader}">
        <Setter Setter.Property="Control.BorderThickness" Setter.Value="0" />
        <Setter Setter.Property="Control.Background" Setter.Value="#FF0000FF" />
        <Setter Setter.Property="FrameworkElement.Height" Setter.Value="10" />
    </Style>
    <Style Style.TargetType="{x:Type TextBox}">
        <Setter Setter.Property="TextBox.TextWrapping" Setter.Value="NoWrap" />
        <Setter Setter.Property="TextBoxBase.HorizontalScrollBarVisibility" Setter.Value="Auto" />
        <Setter Setter.Property="TextBoxBase.VerticalScrollBarVisibility" Setter.Value="Auto" />
        <Setter Setter.Property="Control.BorderBrush" Setter.Value="#FFD8D8D8" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FF262626" />
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="TextBox.MinLines" Setter.Value="12" />
        <Setter Setter.Property="TextBox.MaxLines" Setter.Value="12" />
    </Style>
    <Style Style.TargetType="{x:Type Border}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=UserText,Path=IsFocused}" Value="True">
                <Setter Setter.Property="BorderThickness" Setter.Value="1" />
                <Setter Setter.Property="BorderBrush" Setter.Value="#FFD8D8D8" />
            </DataTrigger>
            <DataTrigger DataTrigger.Binding="{Binding ElementName=UserText,Path=IsFocused}" DataTrigger.Value="False">
                <Setter Setter.Property="BorderThickness" Setter.Value="0" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Setter.Property="BorderThickness" Setter.Value="0" />
    </Style>
    <!--Style Style.TargetType="{x:Type TextBlock}" Style.BasedOn="{StaticResource į}">
        <Setter Setter.Property="TextBlock.Foreground" Setter.Value="#FF8E8E8E" />
        <Setter Setter.Property="TextBlock.FontSize" Setter.Value="12" />
        <Setter Setter.Property="TextBlock.FontStyle" Setter.Value="Italic" />
    </Style-->
    <Style Style.TargetType="{x:Type StatusBar}">
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,3,0,0" />
        <Setter Setter.Property="FrameworkElement.Height" Setter.Value="29" />
        <Setter Setter.Property="Control.Background" Setter.Value="#FFECECEC" />
        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Bottom" />
    </Style>
    <Style Style.TargetType="{x:Type Separator}">
        <Setter Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
    </Style>
    <!--Style Style.BasedOn="{StaticResource į}">
        <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Left" />
        <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Center" />
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="8,0,0,0" />
        <Setter Setter.Property="Control.FontSize" Setter.Value="12" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FF666666" />
    </Style-->
    <!--Style Style.BasedOn="{StaticResource į}" Style.TargetType="{x:Type TextBlock}">
        <Setter Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
        <Setter Setter.Property="TextBlock.Foreground" Setter.Value="#FFFFFFFF" />
        <Setter Setter.Property="TextBlock.FontSize" Setter.Value="12" />
        <Setter Setter.Property="TextBlock.TextWrapping" Setter.Value="Wrap" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
    </Style-->
    <!--Style Style.BasedOn="{StaticResource į}" Style.TargetType="{x:Type TextBlock}">
        <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="10,0,0,0" />
        <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="Continue" />
    </Style-->
    <!--Style Style.TargetType="{x:Type ToolBarTray}">
        <Setter Setter.Property="UIElement.Focusable" Setter.Value="True" />
        <Setter Setter.Property="ToolBarTray.Background" Setter.Value="{StaticResource į}" />
    </Style-->
    <!--usd:CRMImageConverter xmlns:usd="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics" /-->
    <!--Style Style.TargetType="{x:Type utilities:BusyIndicator}">
        <Setter Setter.Property="utilities:BusyIndicator.BusyIndicatorStyle">
            <Setter.Value>
                <Style Style.TargetType="{x:Type Control}">
                    <Setter Setter.Property="FrameworkElement.Width" Setter.Value="15" />
                    <Setter Setter.Property="FrameworkElement.Height" Setter.Value="15" />
                    <Setter Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Left" />
                    <Setter Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Bottom" />
                    <Setter Setter.Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate ControlTemplate.TargetType="{x:Type Control}">
                                <FrameworkTemplate.Resources>
                                    <ResourceDictionary>
                                        <Storyboard x:Key="SpinConnecting" Timeline.RepeatBehavior="Forever" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                                            <DoubleAnimation DoubleAnimation.To="359" Storyboard.TargetName="imgConnecting" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
                                        </Storyboard>
                                    </ResourceDictionary>
                                </FrameworkTemplate.Resources>
                                <Image Image.Name="imgConnecting" FrameworkElement.Style="{DynamicResource ImageLogo}" Image.Stretch="Fill" FrameworkElement.Height="15" UIElement.RenderTransformOrigin="0.5,0.5" UIElement.Visibility="Visible" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Bottom" Image.Source="{Binding Source=msdyusd_Refresh,Converter={StaticResource į}}">
                                    <UIElement.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </UIElement.RenderTransform>
                                </Image>
                                <ControlTemplate.Triggers>
                                    <EventTrigger EventTrigger.RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource į}" />
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style-->
</ResourceDictionary>